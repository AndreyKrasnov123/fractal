import subprocess

# Список библиотек для установки
libraries = ['numpy', 'matplotlib']

for lib in libraries:
    subprocess.call(['pip', 'install', lib])

import numpy as np
import matplotlib.pyplot as plt
import customtkinter as CTk

# Функция для генерации фрактала Мандельброта
def mandelbrot(c, max_iter):
    z = 0
    n = 0
    while abs(z) <= 2 and n < max_iter:
        z = z*z + c
        n += 1
    return n

# Функция для отображения фрактала Мандельброта
def draw_mandelbrot():
    x_min, x_max = -2.5, 2.5
    y_min, y_max = -2.5, 2.5
    resolution = 1000
    max_iter = 100

    x = np.linspace(x_min, x_max, resolution)
    y = np.linspace(y_min, y_max, resolution)
    mandelbrot_set = np.zeros((resolution, resolution))

    for i in range(resolution):
        for j in range(resolution):
            mandelbrot_set[i, j] = mandelbrot(complex(x[j], y[i]), max_iter)

    plt.imshow(mandelbrot_set.T, extent=(x_min, x_max, y_min, y_max), cmap='magma')
    plt.colorbar()
    plt.show()

# Вызов функций для отображения фракталов
# draw_mandelbrot()


class App(CTk.CTk):
    def __init__(self):
        super().__init__()
        self.geometry("468x370")
        self.title("Password generator")
        self.resizable(False, False)

        # self.logo = CTk.CTkImage(dark_image=Image.open("img.png"), size=(460, 150))
        # self.logo_label = CTk.CTkLabel(master=self, text="", image=self.logo)
        # self.logo_label.grid(row=0, column=0)
        self.password_frame = CTk.CTkFrame(master=self, fg_color="transparent")
        self.password_frame.grid(row=1, column=0, padx=(20, 20), sticky="nsew")
        self.entry_password = CTk.CTkEntry(master=self.password_frame, width=300)
        self.entry_password.grid(row=0, column=0, padx=(0, 20))
        self.btn_generate = CTk.CTkButton(master=self.password_frame, text="Generate", width=100, command=self.set_password)
        self.btn_generate.grid(row=0, column=1)

    def set_password(self):
        draw_mandelbrot()
if __name__ == "__main__":
    app = App()
    app.mainloop()

